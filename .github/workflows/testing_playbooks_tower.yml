---
name: Run Tower Openshift Test Playbooks

on: [push, pull_request]

jobs:
  Integration-test:

    runs-on: [self-hosted, linux, tower]

    steps:
      - name: "Checkout Project"
        uses: actions/checkout@v2

      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          version: '4.6'

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: https://api.crc.testing:6443
          openshift_username: ${{ secrets.OPENSHIFT_USER }}
          openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}
          insecure_skip_tls_verify: true

      - name: "Create Tower project"
        run: oc new-project tower-redhatcop-github

      - name: "Install dependencies"
        run: pip3 install -r .github/requirements.txt

      - name: Ansible Version
        run: ansible --version

      - name: "Install Galaxy dependencies"
        run: ansible-galaxy collection install -r .github/collections/requirements.yml

      - name: Set ansible vault key
        run: 'echo "$VAULT_KEY" > vault_id'
        shell: bash
        env:
          VAULT_KEY: ${{ secrets.TOWER_VAULT_PASSWORD }}

      - name: Decrypt manifest file
        run: ansible-vault decrypt playbooks/tower_manifest/manifest_redhat_cop_tower_configuration_manifest.zip --vault-password-file vault_id

      - name: "Build Tower stack"
        run: ansible-playbook .github/playbooks/install_tower_ocp.yml -e openshift_project=tower-redhatcop-github -e openshift_user=${{ secrets.OPENSHIFT_USER }} -e openshift_password=${{ secrets.OPENSHIFT_PASSWORD }} -e openshift_host=https://api.crc.testing:6443 -e openshift_skip_tls_verify=false -e tower_working_location=${{ github.workspace }} -e openshift_skip_tls_verify=true -e pre_tasks_install_packages=false -vvv --vault-password-file vault_id

      - name: "Perform playbook tests"
        run: ansible-playbook playbooks/configure_tower.yml -e tower_hostname=https://ansible-tower-web-svc-tower-redhatcop-github.apps-crc.testing -e tower_username=admin -e tower_password=password

      - name: "Perform export model playbook tests"
        run: ansible-playbook playbooks/configure_tower_export_model.yml -e tower_hostname=https://ansible-tower-web-svc-tower-redhatcop-github.apps-crc.testing -e tower_username=admin -e tower_password=password

      - name: "Delete Tower project"
        run: oc delete project tower-redhatcop-github
        if: ${{ always() }}
